trigger:
- main

variables:
  tag: '$(Build.BuildId)'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'complete/pom.xml'
    goals: 'clean package'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'
    mavenVersionOption: 'Default'
    workingDirectory: 'complete'

# Step 1: Build Docker image (only build)
- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    containerRegistry: 'docker'
    repository: 'leelasai196/gs-rest-service'
    command: 'build'
    Dockerfile: 'complete/Dockerfile'
    tags: |
      $(tag)
      latest

# Step 2: Trivy Scan and save results
- script: |
    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
    trivy image -f table -o $(Build.ArtifactStagingDirectory)/trivy-report.txt leelasai196/gs-rest-service:$(tag)
  displayName: 'Scan Docker Image with Trivy'

# Step 3: Publish Trivy Scan Result
- task: PublishBuildArtifacts@1
  displayName: 'Publish Trivy Report Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/trivy-report.txt'
    ArtifactName: 'TrivyScanReport'
    publishLocation: 'Container'

# Step 4: Push Docker Image
- task: Docker@2
  displayName: 'Push Docker Image'
  inputs:
    containerRegistry: 'docker'
    repository: 'leelasai196/gs-rest-service'
    command: 'push'
    tags: |
      $(tag)
      latest
